{"version":3,"file":"gltf-transform-occlusion-vertex.js","sources":["../node_modules/geo-ambient-occlusion/index.js","../src/index.ts"],"sourcesContent":["'use strict';\n\n\nconst REGL = require('regl');\nconst mat4 = require('gl-matrix').mat4;\nconst center = require('geo-center');\nconst boundingBox = require('vertices-bounding-box');\nconst transform = require('geo-3d-transform-mat4');\nconst converter = require('geo-convert-position-format');\nconst vertexNormals = require('normals').vertexNormals;\nconst reindex = require('mesh-reindex');\nconst defaults = require('defaults');\n\n\nmodule.exports = function(positions, opts) {\n\n  opts = defaults(opts, {\n    cells: undefined,\n    regl: false,\n    bias: 0.01,\n    resolution: 512\n  });\n\n  // Center the mesh on the origin (and make a copy in the process).\n  positions = center(positions);\n\n  // Scale the mesh to a 1x1x1 cube.\n  const bb = boundingBox(positions);\n  const scale = [\n    1 / (bb[1][0] - bb[0][0]),\n    1 / (bb[1][1] - bb[0][1]),\n    1 / (bb[1][2] - bb[0][2]),\n  ];\n  const scaleMat4 = mat4.scale([], mat4.create(), scale);\n  positions = transform(positions, scaleMat4);\n\n  // Create an array with the vertex data.\n  const vertexData = converter.convert(positions, converter.TYPED_ARRAY);\n\n  // Create normals.\n  let mesh = {\n    cells: opts.cells,\n    positions: positions,\n  };\n  if (mesh.cells === undefined) {\n    mesh = reindex(vertexData);\n  }\n  const normals = vertexNormals(mesh.cells, mesh.positions, 0);\n  const normalData = converter.convert(normals, converter.TYPED_ARRAY);\n\n  // Make sure the position array is divisible by three.\n  if (vertexData.length % 3 !== 0) {\n    throw new Error('geo-ambient-occlusion: Position array not divisible by three.');\n  }\n\n  // Copy it into the smallest POT-length array we can.\n  const vertexCount = vertexData.length/3;\n  let vertexTextureRes = 1;\n  while (vertexTextureRes * vertexTextureRes < vertexCount) {\n    vertexTextureRes *= 2;\n  }\n  const vertexDataArray = new Float32Array(vertexTextureRes * vertexTextureRes * 3);\n  vertexDataArray.set(vertexData);\n\n  // Copy the normal data into a same-size array.\n  const normalDataArray = new Float32Array(vertexTextureRes * vertexTextureRes * 3);\n  normalDataArray.set(normalData);\n\n  // Figure out what extensions we need.\n  const extensions = ['OES_texture_float'];\n  if (vertexCount > 65535 && opts.cells !== undefined) {\n    extensions.push('OES_element_index_uint');\n  }\n\n  // If we are given a regl context, make sure it has the extensions we need.\n  if (opts.regl) {\n    for (let ext of extensions) {\n      if (!opts.regl.hasExtension(ext)) {\n        throw new Error('geo-ambient-occlusion: Provided regl context needs the ' + ext + ' extension for this mesh.');\n      }\n    }\n  }\n\n  // If we don't have a regl context, create one.\n  let regl, ownregl;\n  if (opts.regl) {\n    regl = opts.regl;\n    ownregl = false;\n  } else {\n    regl = REGL({\n      canvas: document.createElement('canvas'),\n      extensions: extensions,\n    });\n    ownregl = true;\n  }\n\n  // Define a framebuffer for our position data.\n  const fboPosition = fbo(opts.resolution);\n\n  // Define the command that gathers the position data.\n  const cmdPositionObj = {\n    vert: `\n      precision highp float;\n      attribute vec3 position;\n      uniform mat4 model, projection;\n      varying vec3 vPos;\n      void main() {\n        gl_Position = projection * model * vec4(position, 1);\n        vPos = vec3(model * vec4(position, 1));\n      }\n    `,\n    frag: `\n      precision highp float;\n      varying vec3 vPos;\n      void main() {\n        gl_FragColor = vec4(vPos, 1);\n      }\n    `,\n    attributes: {\n      position: positions,\n    },\n    uniforms: {\n      model: regl.prop('model'),\n      projection: regl.prop('projection'),\n    },\n    viewport: {x: 0, y: 0, width: opts.resolution, height: opts.resolution},\n    framebuffer: fboPosition,\n  };\n  if (opts.cells) {\n    cmdPositionObj.elements = opts.cells;\n  } else {\n    cmdPositionObj.count = vertexCount;\n  }\n  const cmdPosition = regl(cmdPositionObj);\n\n  // Define a pair of buffers we'll ping-pong to accumulate occlusion data.\n  const fboOcclusion = [fbo(vertexTextureRes), fbo(vertexTextureRes)];\n\n  // Create a texture that stores our vertex locations.\n  const tVertex = regl.texture({\n    width: vertexTextureRes,\n    height: vertexTextureRes,\n    data: vertexDataArray,\n    format: 'rgb',\n    type: 'float'\n  });\n\n  // Create a texture that stores our normal directions.\n  const tNormal = regl.texture({\n    width: vertexTextureRes,\n    height: vertexTextureRes,\n    data: normalDataArray,\n    format: 'rgb',\n    type: 'float',\n  });\n\n  // Define the command for occlusion accumulation.\n  const cmdOcclusion = regl({\n    vert: `\n      precision highp float;\n      attribute vec2 position;\n      void main() {\n          gl_Position = vec4(position, 0, 1);\n      }\n    `,\n    frag: `\n      precision highp float;\n\n      uniform sampler2D tPosition, tSource, tVertex, tNormal;\n      uniform float count, bias;\n      uniform vec2 resolution;\n      uniform mat4 model;\n\n      const float INVSQRT3 = 0.5773502691896258; // 1/sqrt(3)\n\n      void main() {\n          vec2 texel = gl_FragCoord.xy/resolution;\n          vec3 vert = texture2D(tVertex, texel).rgb;\n          vert = vec3(model * vec4(vert, 1));\n          vec3 norm = texture2D(tNormal, texel).rgb;\n          norm = vec3(model * vec4(norm, 1));\n          float z = texture2D(tPosition, INVSQRT3 * vert.xy + 0.5).z;\n          float o = 0.0;\n          if ((vert.z - z) < -bias) {\n              o = 1.0;\n          }\n          vec4 src = texture2D(tSource, texel);\n          if (dot(norm, vec3(0,0,1)) > 0.0) {\n            gl_FragColor = src + vec4(o, 1, 0, 0);\n          } else {\n            gl_FragColor = src;\n          }\n      }\n    `,\n    attributes: {\n      position: [-1,-1, 1,-1, 1,1, -1,-1, 1,1, -1,1],\n    },\n    uniforms: {\n      tPosition: fboPosition,\n      tSource: regl.prop('source'),\n      tVertex: tVertex,\n      tNormal: tNormal,\n      count: regl.prop('count'),\n      bias: regl.prop('bias'),\n      resolution: [vertexTextureRes, vertexTextureRes],\n      model: regl.prop('model'),\n    },\n    viewport: {x: 0, y: 0, width: vertexTextureRes, height: vertexTextureRes},\n    framebuffer: regl.prop('destination'),\n    count: 6,\n  });\n\n  // Keep track of our ping-ponging.\n  let occlusionIndex = 0;\n\n  // Keep track of how many samples we've collected.\n  let occlusionCount = 0;\n\n  // set up our projection matrix.\n  const d = Math.sqrt(3)/2;\n  const projection = mat4.ortho([], -d, d, -d, d, -d, d);\n\n  // Take a single occlusion sample.\n  function sample() {\n    occlusionIndex = 1 - occlusionIndex;\n    const source = fboOcclusion[occlusionIndex];\n    const destination = fboOcclusion[1 - occlusionIndex];\n    occlusionCount++;\n    const model = mat4.create();\n    mat4.rotateX(model, model, Math.random() * 100);\n    mat4.rotateY(model, model, Math.random() * 100);\n    mat4.rotateZ(model, model, Math.random() * 100);\n    regl.clear({\n      color: [0,0,0,1],\n      depth: 1,\n      framebuffer: fboPosition,\n    });\n    cmdPosition({\n      model: model,\n      projection: projection,\n    });\n    regl.clear({\n      color: [0,0,0,1],\n      depth: 1,\n      framebuffer: destination,\n    });\n    cmdOcclusion({\n      source: source,\n      destination: destination,\n      count: occlusionCount,\n      bias: opts.bias,\n      model: model,\n    });\n  }\n\n\n  // Return the per-vertex ambient occlusion in a Float32Array of length vertexCount.\n  function report() {\n    // Gather the resulting pixels.\n    let pixels;\n    fboOcclusion[1 - occlusionIndex].use(() => {\n      pixels = regl.read();\n    });\n\n    // Format them and return the final product.\n    const result = new Float32Array(vertexCount);\n    for (let i = 0; i < vertexCount; i++) {\n      const index = i * 4;\n      const total = pixels[index + 1];\n      result[i] = total === 0.0 ? 0.0 : pixels[index + 0]/total;\n    }\n\n    return result;\n  }\n\n\n  // Dispose of all resources. Do not dispose of regl if we did not create it. Behavior after calling dispose is\n  // undefined.\n  function dispose() {\n    tVertex.destroy();\n    fboPosition.destroy();\n    fboOcclusion[0].destroy();\n    fboOcclusion[1].destroy();\n    if (ownregl) {\n      regl.destroy();\n    }\n  }\n\n\n  // Utility function for creating a common fbo.\n  function fbo(resolution) {\n    return regl.framebuffer({\n      width: resolution,\n      height: resolution,\n      colorFormat: 'rgba',\n      colorType: 'float',\n    });\n  }\n\n  return {\n    sample: sample,\n    report: report,\n    dispose: dispose\n  };\n};\n","import { GLTFContainer, GLTFUtil, LoggerVerbosity } from 'gltf-transform-util';\nimport * as geoaoNamespace from 'geo-ambient-occlusion';\n\nconst geoao = geoaoNamespace as Function;\nconst logger = GLTFUtil.createLogger('gltf-transform-occlusion-vertex', LoggerVerbosity.INFO);\n\ninterface IOcclusionOptions {\n    resolution: 512;\n    samples: 500;\n}\n\nfunction getTextureBuffer (): ArrayBuffer {\n    const canvas = document.createElement('canvas');\n    canvas.width = 256;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 255, 0);\n    grd.addColorStop(0, '#000');\n    grd.addColorStop(1, '#fff');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, 256, 1);\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    return imgData.data.buffer;\n}\n\nlet aoTextureBuffer;\n\nfunction occlusionVertex (container: GLTFContainer, options: IOcclusionOptions): GLTFContainer {\n\n    aoTextureBuffer = aoTextureBuffer || getTextureBuffer();\n    const {resolution, samples} = options;\n    logger.info(`Resolution: ${resolution}; Samples: ${samples}`);\n\n    const primitives = [];\n    const meshes = container.json.meshes || [];\n    meshes.forEach((mesh) => {\n        mesh.primitives.forEach((primitive) => {\n            const position = container.getAccessorArray(primitive.attributes['POSITION']);\n            const cells = primitive.indices !== undefined ? container.getAccessorArray(primitive.indices) : undefined;\n            primitives.push({position, cells});\n        })\n    });    \n\n    if (primitives.length === 0) {\n        logger.warn('No primitives found.');\n        return;\n    }\n\n    container.addImage('occlusion.png', aoTextureBuffer, GLTF.ImageMimeType.PNG);\n    container.json.textures.push({source: container.json.images.length - 1});\n    const occlusionTextureIndex = container.json.textures.length - 1;\n    \n    // TODO: Implement baking such that primitives affect other primitives, and respect\n    // world transforms.\n    primitives.forEach((primitive, index) => {\n        logger.info(`Baking primitive ${index} / ${primitives.length}.`);\n\n        if (container.json.materials[primitive.material].occlusionTexture) {\n            // TODO: Duplicate the material if needed.\n            logger.error(`Primitive \"${primitive.name}\" material already has AO map, and may be shared by another primitive. Skipping.`);\n            return;\n        }\n\n        // Bake vertex AO.\n        const {position, cells} = primitive;\n        const aoSampler = geoao(position, {cells, resolution});\n        for (let i = 0; i < samples; i++) aoSampler.sample();\n        const ao = aoSampler.report();\n        aoSampler.dispose();\n\n        // Write UV set and add AO map.\n        const numVertices = ao.length;\n        const uv2Data = new Float32Array(numVertices * 2);\n        for (let i = 0; i < numVertices; i++) {\n            uv2Data[i * 2] = uv2Data[i * 2 + 1] = 1 - ao[i];\n        }\n        container.addAccessor(uv2Data, GLTF.AccessorType.VEC2, 12345);\n        primitive.attributes['TEXCOORD_1'] = container.json.accessors.length - 1;\n        if (primitive.attributes['TEXCOORD_0'] === undefined) {\n            primitive.attributes['TEXCOORD_0'] = container.json.accessors.length - 1;\n        }\n        container.json.materials[primitive.material].occlusionTexture = {index: occlusionTextureIndex};\n    });\n\n    logger.info('Finished baking per-vertex occlusion.');\n    return container;\n}\n\nexport { occlusionVertex };\n"],"names":["GLTFUtil","LoggerVerbosity"],"mappings":"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"}